<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
http = -1;
if (customer_exists()) {
    str = "id="+urlencode(customer_load());
    http = api_do("reserve/loadme/",str)
} else {

    with(instance_create(160,250,objMessageCentered)) {
        text = "You havent book any reservation, what about doing it now?"
    }
    
    instance_create(20,350,objReserveNowButton)
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (async_load[? "id"] == http) {
    show_debug_message("http received on ManageReservation! status: "+string(async_load[? "status"]))
    //show_debug_message("http status: " +string(async_load[?'http_status']))
    //show_debug_message("http result: "+string(async_load[? "result"]))
    if (async_load[? "status"] == 0) {
        show_debug_message("result:"+string(async_load[? "result"]))
        var json = json_decode(async_load[? "result"]);
        var yy = 0;
        for(var i = 0; i &lt;= real(json[? "quan"]); i ++) {
            var ide = string(i);
            var obj = instance_create(0,y+yy, objBarElement_Reservation);
            obj.titulo = json[? "type-"+ide] +": "+json[? "date-"+ide]+" at "+json[?"time-"+ide];
            obj.ide = json[?"id-"+ide];
            obj.type = json[?"type-"+ide];
            obj.date = json[?"date-"+ide];
            obj.time = json[?"time-"+ide];
            obj.ppl = json[?"ppl-"+ide];
            obj.price = json[?"done-"+ide];
            yy += 64;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
