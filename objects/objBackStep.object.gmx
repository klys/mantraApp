<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBackButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>roomToGo = noone;
// This is the name of your instance in Syncano | CHANGE TO YOUR INSTANCE ID
//instanceid = "mantra";
//This is the name of your class in Syncano | CHANGE TO YOUR CLASS NAME
//class = "test";
// This is your API Key from Syncano| CHANGE TO YOUR API KEY
//apikey = "451bf906af07fa10882fc889bd69a7b4cf50cfc7";
// This is the Data Object ID - If you only have one data object, the ID will be 1 for e.g.| CHANGE TO YOUR DATA OBJECT ID
//objectid = "1"
// This creates the HTTP request with the ID syncGet, we will check this in the Async Event DO NOT EDIT THIS
//syncGet = http_get("https://api.syncano.io/v1.1/instances/" + instanceid + "/classes/" + class + "/objects/" + objectid + "/?api_key=" + apikey);
//syncSent = -1;
//Run to show the full string in debug console 
//show_debug_message("https://api.syncano.io/v1.1/instances/" + instanceid + "/classes/" + class + "/objects/" + objectid + "/?api_key=" + apikey)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//with(instance_create(x,y,objMessageBox))
//{
//    message = "WIP Network funcionality needed!"
//}

//var map = ds_map_create();
//ds_map_add(map, "Host", "api.syncano.io")
//ds_map_add(map, "X-USER-KEY", "9dd8a92ae9f858fb7deffd3c5ec916667b9bcd00")
//ds_map_add(map, "X-API-KEY", "451bf906af07fa10882fc889bd69a7b4cf50cfc7")
//ds_map_add(map, "Content-Type", "application/json");
//ds_map_add(map, "Cache-Control", "no-cache");
//ds_map_add(map, "Postman-Token", "d190ebed-e163-6a5c-9fd6-e6f298e62317")
//ds_map_add(map, "valor2", "estoxD");
//var data='{"valor1":"desdeGMS","valor2":"xD"}';
//syncSent = http_request("https://api.syncano.io/v1.1/instances/mantra/classes/test/objects/?api_key=9dd8a92ae9f858fb7deffd3c5ec916667b9bcd00", "POST", map, data);

if (roomToGo != noone) {
    room = roomToGo;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check that this Async Event matches the HTTP request ID syncGet
/*
switch (async_load[? "id"])
{
    case syncGet:
        {
        // Check the HTTP request ID matches the ASYNC Event 
        // Store the JSON callback string from Syncano in a varible
        var json = async_load[? "result"]
        // To check you're getting the right JSON back you can print it to the screen
        
        show_debug_message("JSON GETTED: "+json);
        //Decode the JSON from the HTTP request into a DS Map called var map
        
        var map = json_decode(json);
        //if it doesn't load map
        if (map == -1) {show_debug_message("failed to get URL")}
        
        
        // DEFINE YOUR CLASSES
        /// REPLICATE THIS TO GRAB ANY FLOAT,INTEGER,STRING and store it in a ds_map
        var ourVarOne = map[? "valor1"];
        // For example - this would check for a class called test2 and fill ourVariable2 with whatever is in it.
        var ourVarTwo = map[? "valor2"];
        
        show_debug_message("v1: " + ourVarOne + "  v2:" + ourVarTwo)
        // Get a string
        //gameName = syncanoVar(map,"gameName");
        // destroy the map to avoid leaks 
        ds_map_destroy(map);
        }
    break;
    case syncSent:
        {
        var json = async_load[? "result"]
        // To check you're getting the right JSON back you can print it to the screen.
        show_debug_message(json);
        var map = json_decode(json);
        if (map == -1) {
            show_debug_message("failed to get URL")
            exit;
        }
        
        if (ds_map_exists(map, "id")) {
            var idResultObject = map[? "id"];
        
            show_debug_message("id del object creado: "+string(idResultObject))
        }
        ds_map_destroy(map);
        }
    break;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
